/* 
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.tweirtx.TBAAPIv3client.Client;
using com.tweirtx.TBAAPIv3client.Api;
using com.tweirtx.TBAAPIv3client.Model;

namespace com.tweirtx.TBAAPIv3client.Test
{
    /// <summary>
    ///  Class for testing ListApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ListApiTests
    {
        private ListApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ListApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ListApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ListApi
            //Assert.IsInstanceOfType(typeof(ListApi), instance, "instance is a ListApi");
        }

        
        /// <summary>
        /// Test GetDistrictEvents
        /// </summary>
        [Test]
        public void GetDistrictEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetDistrictEvents(districtKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<ModelEvent>> (response, "response is List<ModelEvent>");
        }
        
        /// <summary>
        /// Test GetDistrictEventsKeys
        /// </summary>
        [Test]
        public void GetDistrictEventsKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetDistrictEventsKeys(districtKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test GetDistrictEventsSimple
        /// </summary>
        [Test]
        public void GetDistrictEventsSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetDistrictEventsSimple(districtKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<EventSimple>> (response, "response is List<EventSimple>");
        }
        
        /// <summary>
        /// Test GetDistrictRankings
        /// </summary>
        [Test]
        public void GetDistrictRankingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetDistrictRankings(districtKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<DistrictRanking>> (response, "response is List<DistrictRanking>");
        }
        
        /// <summary>
        /// Test GetDistrictTeams
        /// </summary>
        [Test]
        public void GetDistrictTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetDistrictTeams(districtKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<Team>> (response, "response is List<Team>");
        }
        
        /// <summary>
        /// Test GetDistrictTeamsKeys
        /// </summary>
        [Test]
        public void GetDistrictTeamsKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetDistrictTeamsKeys(districtKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test GetDistrictTeamsSimple
        /// </summary>
        [Test]
        public void GetDistrictTeamsSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetDistrictTeamsSimple(districtKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<TeamSimple>> (response, "response is List<TeamSimple>");
        }
        
        /// <summary>
        /// Test GetEventTeams
        /// </summary>
        [Test]
        public void GetEventTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetEventTeams(eventKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<Team>> (response, "response is List<Team>");
        }
        
        /// <summary>
        /// Test GetEventTeamsKeys
        /// </summary>
        [Test]
        public void GetEventTeamsKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetEventTeamsKeys(eventKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test GetEventTeamsSimple
        /// </summary>
        [Test]
        public void GetEventTeamsSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetEventTeamsSimple(eventKey, ifModifiedSince);
            //Assert.IsInstanceOf<List<TeamSimple>> (response, "response is List<TeamSimple>");
        }
        
        /// <summary>
        /// Test GetEventTeamsStatuses
        /// </summary>
        [Test]
        public void GetEventTeamsStatusesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventKey = null;
            //string ifModifiedSince = null;
            //var response = instance.GetEventTeamsStatuses(eventKey, ifModifiedSince);
            //Assert.IsInstanceOf<Dictionary<string, TeamEventStatus>> (response, "response is Dictionary<string, TeamEventStatus>");
        }
        
        /// <summary>
        /// Test GetEventsByYear
        /// </summary>
        [Test]
        public void GetEventsByYearTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //string ifModifiedSince = null;
            //var response = instance.GetEventsByYear(year, ifModifiedSince);
            //Assert.IsInstanceOf<List<ModelEvent>> (response, "response is List<ModelEvent>");
        }
        
        /// <summary>
        /// Test GetEventsByYearKeys
        /// </summary>
        [Test]
        public void GetEventsByYearKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //string ifModifiedSince = null;
            //var response = instance.GetEventsByYearKeys(year, ifModifiedSince);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test GetEventsByYearSimple
        /// </summary>
        [Test]
        public void GetEventsByYearSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //string ifModifiedSince = null;
            //var response = instance.GetEventsByYearSimple(year, ifModifiedSince);
            //Assert.IsInstanceOf<List<EventSimple>> (response, "response is List<EventSimple>");
        }
        
        /// <summary>
        /// Test GetTeamEventsStatusesByYear
        /// </summary>
        [Test]
        public void GetTeamEventsStatusesByYearTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamKey = null;
            //int? year = null;
            //string ifModifiedSince = null;
            //var response = instance.GetTeamEventsStatusesByYear(teamKey, year, ifModifiedSince);
            //Assert.IsInstanceOf<Dictionary<string, TeamEventStatus>> (response, "response is Dictionary<string, TeamEventStatus>");
        }
        
        /// <summary>
        /// Test GetTeams
        /// </summary>
        [Test]
        public void GetTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNum = null;
            //string ifModifiedSince = null;
            //var response = instance.GetTeams(pageNum, ifModifiedSince);
            //Assert.IsInstanceOf<List<Team>> (response, "response is List<Team>");
        }
        
        /// <summary>
        /// Test GetTeamsByYear
        /// </summary>
        [Test]
        public void GetTeamsByYearTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //int? pageNum = null;
            //string ifModifiedSince = null;
            //var response = instance.GetTeamsByYear(year, pageNum, ifModifiedSince);
            //Assert.IsInstanceOf<List<Team>> (response, "response is List<Team>");
        }
        
        /// <summary>
        /// Test GetTeamsByYearKeys
        /// </summary>
        [Test]
        public void GetTeamsByYearKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //int? pageNum = null;
            //string ifModifiedSince = null;
            //var response = instance.GetTeamsByYearKeys(year, pageNum, ifModifiedSince);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test GetTeamsByYearSimple
        /// </summary>
        [Test]
        public void GetTeamsByYearSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //int? pageNum = null;
            //string ifModifiedSince = null;
            //var response = instance.GetTeamsByYearSimple(year, pageNum, ifModifiedSince);
            //Assert.IsInstanceOf<List<TeamSimple>> (response, "response is List<TeamSimple>");
        }
        
        /// <summary>
        /// Test GetTeamsKeys
        /// </summary>
        [Test]
        public void GetTeamsKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNum = null;
            //string ifModifiedSince = null;
            //var response = instance.GetTeamsKeys(pageNum, ifModifiedSince);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test GetTeamsSimple
        /// </summary>
        [Test]
        public void GetTeamsSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNum = null;
            //string ifModifiedSince = null;
            //var response = instance.GetTeamsSimple(pageNum, ifModifiedSince);
            //Assert.IsInstanceOf<List<TeamSimple>> (response, "response is List<TeamSimple>");
        }
        
    }

}
